[{"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\index.js":"1","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\App.js":"2","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\LoginPage\\index.js":"3","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\LoginPage\\styled.js":"4","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\assets\\styles\\GlobalStyles.js":"5","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\assets\\styles\\theme.js":"6","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\LoginPage\\useHooks.js":"7","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\GamePage\\index.js":"8","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\GamePage\\useHooks.js":"9","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\GamePage\\styled.js":"10","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\InvadeButton\\index.js":"11","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\InvadeButton\\styled.js":"12","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\InvadeButton\\useHooks.js":"13","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\TopBar\\index.js":"14","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\TopBar\\styled.js":"15","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\assets\\styles\\media.js":"16","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\ErrorPage\\index.js":"17","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\ErrorPage\\useHooks.js":"18","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\ErrorPage\\styled.js":"19"},{"size":198,"mtime":1611881908866,"results":"20","hashOfConfig":"21"},{"size":650,"mtime":1612360980852,"results":"22","hashOfConfig":"21"},{"size":619,"mtime":1612192612938,"results":"23","hashOfConfig":"21"},{"size":1032,"mtime":1612192607009,"results":"24","hashOfConfig":"21"},{"size":999,"mtime":1611944991399,"results":"25","hashOfConfig":"21"},{"size":169,"mtime":1612194042049,"results":"26","hashOfConfig":"21"},{"size":474,"mtime":1611952121562,"results":"27","hashOfConfig":"21"},{"size":3348,"mtime":1612282842406,"results":"28","hashOfConfig":"21"},{"size":6341,"mtime":1612371696658,"results":"29","hashOfConfig":"21"},{"size":5029,"mtime":1612282939305,"results":"30","hashOfConfig":"21"},{"size":634,"mtime":1612212271745,"results":"31","hashOfConfig":"21"},{"size":381,"mtime":1612190815483,"results":"32","hashOfConfig":"21"},{"size":891,"mtime":1612370582770,"results":"33","hashOfConfig":"21"},{"size":403,"mtime":1612191403913,"results":"34","hashOfConfig":"21"},{"size":325,"mtime":1612192465966,"results":"35","hashOfConfig":"21"},{"size":325,"mtime":1612193165829,"results":"36","hashOfConfig":"21"},{"size":368,"mtime":1612361510253,"results":"37","hashOfConfig":"21"},{"size":0,"mtime":1612361458427,"results":"38","hashOfConfig":"39"},{"size":718,"mtime":1612361549296,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"tumfv5",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4crkrn",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\index.js",[],["84","85","86","87","88"],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\App.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\LoginPage\\index.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\LoginPage\\styled.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\assets\\styles\\GlobalStyles.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\assets\\styles\\theme.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\LoginPage\\useHooks.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\GamePage\\index.js",["89","90","91","92","93"],"import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport xIcon from 'assets/icons/xIcon.svg';\r\nimport ElipseIcon from 'assets/icons/ElipseIcon.svg';\r\n\r\nimport InvadeButton from 'components/InvadeButton';\r\n\r\nimport TopBar from 'components/TopBar';\r\n\r\nimport {\r\n  PlayerIcon,\r\n  PlayerInsideWrapper,\r\n  PlayersWrapper,\r\n  BoardWrapper,\r\n  Field,\r\n  WaitForOpponentWrapper,\r\n  FieldSymbolImage,\r\n  RematchButton,\r\n  RematchText,\r\n  RematchWrapper,\r\n  RematchPlayerName,\r\n  MainWrapper,\r\n  BottomWrapper,\r\n  InvadeButtonWrapper,\r\n  Text,\r\n  RevengeWrapper,\r\n  PlayerAcceptStatus,\r\n  RevengeText,\r\n  PlayerName,\r\n  PlayerStatus,\r\n  RevengeButton,\r\n} from './styled';\r\n\r\nimport useHooks from './useHooks';\r\n\r\nconst GamePage = () => {\r\n  const { id, username } = useParams();\r\n  const {\r\n    board,\r\n    isGameStart,\r\n    players,\r\n    move,\r\n    playerMove,\r\n    boardRef,\r\n    acceptRevenge,\r\n    revenge,\r\n    revengeButtonRef,\r\n    mySocketId,\r\n    winStatus,\r\n  } = useHooks(id, username);\r\n\r\n  console.log(players);\r\n\r\n  return (\r\n    <>\r\n      {!isGameStart && (\r\n        <WaitForOpponentWrapper>\r\n          <TopBar>\r\n            <InvadeButton />\r\n          </TopBar>\r\n          <Text>czekanie na przeciwnika</Text>\r\n          <InvadeButton />\r\n        </WaitForOpponentWrapper>\r\n      )}\r\n\r\n      {revenge.showRevenge && (\r\n        <RevengeWrapper>\r\n          <TopBar>\r\n            <InvadeButton />\r\n          </TopBar>\r\n          <RevengeText>Rewanż</RevengeText>\r\n          {players.map(player => (\r\n            <PlayerAcceptStatus>\r\n              <PlayerName>{player.username}</PlayerName>\r\n              <PlayerStatus isAccepted={revenge.users.includes(player.userId)}>\r\n                {revenge.users.includes(player.userId)\r\n                  ? 'zatwierdzono'\r\n                  : 'oczekiwanie na potwierdzenie'}\r\n              </PlayerStatus>\r\n            </PlayerAcceptStatus>\r\n          ))}\r\n          <RevengeButton ref={revengeButtonRef} onClick={acceptRevenge}>\r\n            {revenge.users.includes(mySocketId) ? 'potwierdzono' : 'potwierdź'}\r\n          </RevengeButton>\r\n        </RevengeWrapper>\r\n      )}\r\n\r\n      <MainWrapper>\r\n        <TopBar>\r\n          <PlayersWrapper>\r\n            {players.map(player => (\r\n              <PlayerInsideWrapper isMove={player.symbol === move}>\r\n                {player.username}\r\n                <PlayerIcon\r\n                  src={player.symbol ? ElipseIcon : xIcon}\r\n                  alt={player.symbol ? 'circle' : 'x'}\r\n                />\r\n              </PlayerInsideWrapper>\r\n            ))}\r\n          </PlayersWrapper>\r\n          <InvadeButtonWrapper>\r\n            <InvadeButton />\r\n          </InvadeButtonWrapper>\r\n        </TopBar>\r\n        <BoardWrapper ref={boardRef} isOpen={winStatus !== 0} isWin={winStatus}>\r\n          {board.map((field, fieldIndex) => (\r\n            <Field onClick={() => playerMove(fieldIndex)}>\r\n              {field !== 0 && field === 1 ? (\r\n                <FieldSymbolImage src={xIcon} alt=\"x\" />\r\n              ) : (\r\n                field === 2 && <FieldSymbolImage src={ElipseIcon} alt=\"o\" />\r\n              )}\r\n            </Field>\r\n          ))}\r\n        </BoardWrapper>\r\n        <BottomWrapper>\r\n          <InvadeButton />\r\n        </BottomWrapper>\r\n      </MainWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\GamePage\\useHooks.js",["94","95","96","97"],"import io from 'socket.io-client';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport gsap from 'gsap';\r\n\r\nconst API = 'https://tictactoeoriginbackend.herokuapp.com';\r\n\r\nlet socket;\r\n\r\nconst fieldTypeBoard = [0, 1, 2];\r\nconst [emptyField] = fieldTypeBoard;\r\nconst symbolType = [0, 1];\r\nconst [, elipse] = symbolType;\r\n\r\nconst clearBoard = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\r\nconst winBoardCombination = [\r\n  [1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 1, 1, 1, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 1, 1, 1],\r\n  [1, 0, 0, 1, 0, 0, 1, 0, 0],\r\n  [0, 1, 0, 0, 1, 0, 0, 1, 0],\r\n  [0, 0, 1, 0, 0, 1, 0, 0, 1],\r\n  [1, 0, 0, 0, 1, 0, 0, 0, 1],\r\n  [0, 0, 1, 0, 1, 0, 1, 0, 0],\r\n  [2, 2, 2, 0, 0, 0, 0, 0, 0],\r\n  [0, 0, 0, 2, 2, 2, 0, 0, 0],\r\n  [0, 0, 0, 0, 0, 0, 2, 2, 2],\r\n  [2, 0, 0, 2, 0, 0, 2, 0, 0],\r\n  [0, 2, 0, 0, 2, 0, 0, 2, 0],\r\n  [0, 0, 2, 0, 0, 2, 0, 0, 2],\r\n  [2, 0, 0, 0, 2, 0, 0, 0, 2],\r\n  [0, 0, 2, 0, 2, 0, 2, 0, 0],\r\n];\r\n\r\nconst useHooks = (roomId, username) => {\r\n  const [board, setBoard] = useState([]);\r\n  const [move, setMove] = useState(elipse);\r\n  const [players, setPlayers] = useState([]);\r\n  const [isGameStart, setIsGameStart] = useState(false);\r\n  const [revenge, setRevenge] = useState({ showRevenge: false, users: [] });\r\n  const [mySocketId, setMySocketId] = useState('');\r\n  const [winStatus, setWinStatus] = useState(0);\r\n\r\n  const revengeButtonRef = useRef();\r\n\r\n  const history = useHistory();\r\n\r\n  // const checkWin = (futureBoard, z) => {\r\n  //   let xBoard;\r\n  //   let elipseBoard;\r\n\r\n  //   if (futureBoard) {\r\n  //     xBoard = futureBoard.map(e => (e === 1 ? 0 : e));\r\n  //     elipseBoard = futureBoard.map(e => (e === 2 ? 0 : e));\r\n  //   } else {\r\n  //     xBoard = board.map(e => (e === 1 ? 0 : e));\r\n  //     elipseBoard = board.map(e => (e === 2 ? 0 : e));\r\n  //   }\r\n\r\n  //   let win = false;\r\n\r\n  //   winBoardCombination.forEach(winComb => {\r\n  //     const equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\r\n\r\n  //     if (equals(winComb, xBoard)) {\r\n  //       console.log(z);\r\n  //       console.log(players);\r\n  //       const pFind = players.find(p => p.userId === mySocketId);\r\n  //       console.log(pFind);\r\n  //       // console.log(players.symbol === 1 ? 'wygrałeś' : 'przegrałeś');\r\n\r\n  //       win = true;\r\n  //     }\r\n\r\n  //     if (equals(winComb, elipseBoard)) {\r\n  //       console.log(z);\r\n  //       console.log(players);\r\n  //       const pFind = players.find(p => p.userId === mySocketId);\r\n  //       console.log(pFind);\r\n  //       // console.log('o won');\r\n  //       // console.log(players.symbol === 2 ? 'wygrałeś' : 'przegrałeś');\r\n  //       win = true;\r\n  //     }\r\n  //   });\r\n\r\n  //   if (win) {\r\n  //     setTimeout(() => {\r\n  //       setRevenge({ showRevenge: true, users: [] });\r\n  //     }, 300);\r\n  //   }\r\n  // };\r\n\r\n  const prepareGame = gameSettings => {\r\n    const indexOfMyPlayer = gameSettings.findIndex(element => element.userId === socket.id);\r\n    const gameSettingsEditFormat = gameSettings;\r\n    gameSettingsEditFormat[indexOfMyPlayer].isMe = true;\r\n\r\n    setMySocketId(socket.id);\r\n    setPlayers(gameSettingsEditFormat);\r\n    setRevenge({ showRevenge: false, users: [] });\r\n    setWinStatus(0);\r\n\r\n    setBoard([0, 0, 0, 0, 0, 0, 0, 0, 0]);\r\n    setIsGameStart(true);\r\n  };\r\n\r\n  const playerMove = fieldIndex => {\r\n    const findMyPlayerSettings = players.find(element => element.isMe);\r\n    if (findMyPlayerSettings.symbol === move) {\r\n      const currentBoard = board;\r\n      if (currentBoard[fieldIndex] === 0) {\r\n        currentBoard[fieldIndex] = move + 1;\r\n\r\n        socket.emit('move', { move, board: currentBoard, roomId });\r\n\r\n        const currentMove = move === 0 ? 1 : 0;\r\n        setBoard(currentBoard);\r\n        setMove(currentMove);\r\n\r\n        // checkWin();\r\n      }\r\n    } else {\r\n      alert('to nie jest twój ruch');\r\n    }\r\n  };\r\n\r\n  const preprocessingRevenge = revengesData => {\r\n    if (revengesData.users.length === 2) {\r\n      setRevenge({\r\n        showRevenge: true,\r\n        users: [...revengesData.users],\r\n      });\r\n      socket.emit('getGameSettings', { roomId });\r\n    } else {\r\n      setRevenge({\r\n        showRevenge: true,\r\n        users: [...revengesData.users],\r\n      });\r\n    }\r\n  };\r\n\r\n  const acceptRevenge = () => {\r\n    if (!revenge.users.includes(socket.id)) {\r\n      socket.emit('revenges', { roomId });\r\n\r\n      gsap.to(revengeButtonRef.current, 0.15, {\r\n        background: '#000',\r\n        color: '#fff',\r\n        scale: 1.1,\r\n      });\r\n\r\n      gsap.to(revengeButtonRef.current, 0.15, {\r\n        scale: 1,\r\n        delay: 0.15,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket = io(API);\r\n\r\n    socket.on('prepareGame', gameSettings => {\r\n      prepareGame(gameSettings);\r\n    });\r\n\r\n    socket.on(\r\n      'moveOpponent',\r\n      ({ move: movePlayer, board: boardPlayer, userWin, winStatus: winStatusE }) => {\r\n        setMove(movePlayer);\r\n        setBoard(boardPlayer);\r\n        if (winStatusE === 1) {\r\n          if (userWin === socket.id) {\r\n            setWinStatus(1);\r\n          } else {\r\n            setWinStatus(2);\r\n          }\r\n\r\n          setTimeout(() => {\r\n            setRevenge({ showRevenge: true, users: [] });\r\n          }, 2000);\r\n        }\r\n\r\n        if (winStatusE === 2) {\r\n          setWinStatus(3);\r\n\r\n          setTimeout(() => {\r\n            setRevenge({ showRevenge: true, users: [] });\r\n          }, 2000);\r\n        }\r\n        // if (userWin) {\r\n        //   if (userWin === socket.id) {\r\n        //     setWinStatus(1);\r\n        //   } else {\r\n        //     setWinStatus(2);\r\n        //   }\r\n\r\n        // }\r\n        // checkWin(boardPlayer, 'wyw');\r\n      },\r\n    );\r\n\r\n    socket.on('revengesAcceped', revengesData => {\r\n      preprocessingRevenge(revengesData);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBoard(clearBoard);\r\n    socket.emit('join', { roomId, username }, res => {\r\n      history.push('/error');\r\n      // TODO: jeżęli res error to wyświetlić error\r\n    });\r\n\r\n    socket.on('playerLeave', () => {\r\n      setIsGameStart(false);\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    board,\r\n    isGameStart,\r\n    players,\r\n    move,\r\n    playerMove,\r\n    acceptRevenge,\r\n    revenge,\r\n    revengeButtonRef,\r\n    mySocketId,\r\n    winStatus,\r\n  };\r\n};\r\n\r\nexport default useHooks;\r\n","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\GamePage\\styled.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\InvadeButton\\index.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\InvadeButton\\styled.js",[],["98","99","100","101","102"],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\InvadeButton\\useHooks.js",["103","104"],"import { useState, useRef } from 'react';\r\nimport gsap from 'gsap';\r\n\r\nconst useHooks = roomId => {\r\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\r\n\r\n  const buttonRef = useRef();\r\n\r\n  const buttonAnimatino = () => {\r\n    gsap.to(buttonRef.current, 0.15, {\r\n      scale: 1.1,\r\n      background: '#000',\r\n      color: '#fff',\r\n    });\r\n\r\n    gsap.to(buttonRef.current, 0.15, {\r\n      delay: 0.15,\r\n      scale: 1,\r\n    });\r\n  };\r\n\r\n  const buttonAction = () => {\r\n    setIsButtonClicked(true);\r\n    buttonAnimatino();\r\n\r\n    const link = `${window.location.origin}/${roomId}`;\r\n\r\n    navigator.clipboard\r\n      .writeText(link)\r\n      .then(() => {\r\n        console.log('link copied');\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return {\r\n    isButtonClicked,\r\n    buttonAction,\r\n    buttonRef,\r\n  };\r\n};\r\n\r\nexport default useHooks;\r\n","C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\TopBar\\index.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\components\\TopBar\\styled.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\assets\\styles\\media.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\ErrorPage\\index.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\ErrorPage\\useHooks.js",[],"C:\\Users\\Szymon\\Desktop\\TicTacToe\\client\\src\\views\\ErrorPage\\styled.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":3,"nodeType":"117","messageId":"118","endLine":19,"endColumn":16},{"ruleId":"115","severity":1,"message":"119","line":20,"column":3,"nodeType":"117","messageId":"118","endLine":20,"endColumn":14},{"ruleId":"115","severity":1,"message":"120","line":21,"column":3,"nodeType":"117","messageId":"118","endLine":21,"endColumn":17},{"ruleId":"115","severity":1,"message":"121","line":22,"column":3,"nodeType":"117","messageId":"118","endLine":22,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":53,"column":3,"nodeType":"124","messageId":"125","endLine":53,"endColumn":14},{"ruleId":"115","severity":1,"message":"126","line":11,"column":8,"nodeType":"117","messageId":"118","endLine":11,"endColumn":18},{"ruleId":"115","severity":1,"message":"127","line":17,"column":7,"nodeType":"117","messageId":"118","endLine":17,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":124,"column":7,"nodeType":"130","messageId":"125","endLine":124,"endColumn":37},{"ruleId":"115","severity":1,"message":"131","line":210,"column":47,"nodeType":"117","messageId":"118","endLine":210,"endColumn":50},{"ruleId":"105","replacedBy":"132"},{"ruleId":"107","replacedBy":"133"},{"ruleId":"109","replacedBy":"134"},{"ruleId":"111","replacedBy":"135"},{"ruleId":"113","replacedBy":"136"},{"ruleId":"122","severity":1,"message":"123","line":31,"column":9,"nodeType":"124","messageId":"125","endLine":31,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":34,"column":9,"nodeType":"124","messageId":"125","endLine":34,"endColumn":20},"lines-around-directive",["137"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'RematchButton' is defined but never used.","Identifier","unusedVar","'RematchText' is defined but never used.","'RematchWrapper' is defined but never used.","'RematchPlayerName' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'emptyField' is assigned a value but never used.","'winBoardCombination' is assigned a value but never used.","no-alert","Unexpected alert.","CallExpression","'res' is defined but never used.",["137"],[],[],[],[],"padding-line-between-statements"]